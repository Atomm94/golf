/* eslint-disable @typescript-eslint/no-unused-vars */
/*** AUTOGENERATED FILE: you can only modify parts of the file within <keep-*> tags ***/
import { asPromise } from '../../../shared/as-promise';
import { IRequestContext } from '../../../shared/IRequestContext';
import { HoleInOne } from '../../../hole-in-one/models/HoleInOne';
import { ClubNestedInput } from '../../../club/inputs/ClubNestedInput';
import { Club } from '../../../club/models/Club';

export async function updateClubRelation(holeInOne: HoleInOne, club: ClubNestedInput | null | undefined, context: IRequestContext) {
  const existingClub = await holeInOne.club;

  if (club === null) {
    throw new Error('HoleInOne.club cannot be null')
  } else if (club === undefined) {
    // do nothing
  } else if (club.id) {
    const clubModel = await context.em.findOneOrFail(Club, club.id);
    holeInOne.club = asPromise(await clubModel.update(club, context));
  } else if (existingClub) {
    await existingClub.update(club, context);
  } else {
    holeInOne.club = asPromise(await new Club().update(club, context));
  }
}

