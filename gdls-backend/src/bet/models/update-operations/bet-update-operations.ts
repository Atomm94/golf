/* eslint-disable @typescript-eslint/no-unused-vars */
/*** AUTOGENERATED FILE: you can only modify parts of the file within <keep-*> tags ***/
import { asPromise } from '../../../shared/as-promise';
import { IRequestContext } from '../../../shared/IRequestContext';
import { Bet } from '../../../bet/models/Bet';
import { BetsGroupNestedInput } from '../../../bets-group/inputs/BetsGroupNestedInput';
import { BetsGroup } from '../../../bets-group/models/BetsGroup';

export async function updateBetsGroupRelation(bet: Bet, betsGroup: BetsGroupNestedInput | null | undefined, context: IRequestContext) {
  const existingBetsGroup = await bet.betsGroup;

  if (betsGroup === null) {
    throw new Error('Bet.betsGroup cannot be null')
  } else if (betsGroup === undefined) {
    // do nothing
  } else if (betsGroup.id) {
    const betsGroupModel = await context.em.findOneOrFail(BetsGroup, betsGroup.id);
    bet.betsGroup = asPromise(await betsGroupModel.update(betsGroup, context));
  } else if (existingBetsGroup) {
    await existingBetsGroup.update(betsGroup, context);
  } else {
    bet.betsGroup = asPromise(await new BetsGroup().update(betsGroup, context));
  }
}

